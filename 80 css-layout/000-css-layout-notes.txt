imooc 网页布局基础
http://www.imooc.com/video/1329

#什么是网页布局？
- 是网页制作的基础
- DIV+CSS 布局网页是流行的做法
- 三大布局：流式布局（normal flow）、浮动定位布局（floats），绝对定位布局（absolute positioning）
- 相关知识点：标准文档流、盒子模型、float属性、position属性
- 三个案例： 自动居中-列布局案例（盒子模型的使用方法）、浮动布局案例-float属性（解决浮动影响的方法）
- 绝对定位布局案例 - 绝对定位实现横向两列或多列布局

#布局基础知识
- W3c标准：HTML+XML、CSS、DOM+ECMAScript
- 原则：结构、样式、行为分离

#标准文档流（Normal flow）
- 从上到下、从左到右， 输出文档内容
- 由块级元素和行级元素组成
- 块级元素：从左到右撑满页面，独占一行；触碰到页面边缘时，会自动换行。如：div, ul, li, dl, dt, p...
- 行级元素：能在同一行内显示；不会改变HTML文档结构。如：span, strong, img, input
- 块级和行级元素都是盒子模型
- 盒子模型：网页布局的基石；可以存放网页元素（文本、图片、音频、视频），控制内容/盒子之间的距离
??? 出来的图片内容+border还有几个px的差别
- 如果想让页面自动居中，当设置margin属性为auto的时候，不能再设置浮动或绝对定位属性

#盒子3D模型
1. border
2. content+padding
3. background-image
4. background-color
5. margin

#3-1 浮动布局简介及float属性
## 如何实现块级元素的横向布局？
- 浮动布局， 横向多列布局，两列/三列
- float的三个属性值： left, right, none
特点：元素会左移，或右移，直至触碰到容器为止。
- 当浮动元素未设置宽度时，其宽度有其内容决定。
- 当元素设置浮动属性后，会对相邻的元素产生影响，相邻元素特指紧邻后面的元素。（float： left，下一行的块级元素就跑到同行来了；float：right， 后面的元素跑到左边来了）
- 紧邻其后的元素移动会影响布局，因此需要清除浮动。


##清除浮动
方法一、对受到浮动影响的元素设置clear属性 - 常用clear：both；clear：left或者 clear: right也是可以的，但要求你能够清楚地判断哪一侧收到了影响。负责即使设置了清除浮动，也不起作用。
- 当元素设置浮动属性后，还可能影响包含浮动属性元素的父元素, 当父包含块缩成一条时，此时clear：both没有用， 它一般用于紧邻后面元素的清除浮动, 此时要用overflow:hidden来清除

方法二、对受到浮动影响的元素同时设置width;100%(或固定宽度) + overflow：hidden；

##横向两列布局
- 网页布局最常见的方式之一
- 主要应用技能
	float属性 - 使纵向排列的块级元素，横向排列
	margin属性 - 设置两列之间的间距

##绝对定位布局
- 通过设置position属性实现
- 能够实现横向多列布局及较为复杂的定位，例如：
- 带有遮罩层效果的提示框、固定层效果、全屏广告等等
- position属性的3种定位形式：静态定位、绝对定位、相对定位
- 4个属性值：
static（静态定位） - 没有设定position属性时的默认状态，元素属性标准文档流中
relative（相对定位） - 相对于自身原位置进行偏移；仍处于标准文档流中；随即拥有了偏移属性和z-index属性
absolute（绝对定位）- 建立了以包含块为基准的定位；完全脱离了标准文档流 ；随即拥有了偏移属性和z-index属性 
fixed（固定定位）

##position实现横向两列布局
- 使用absolute实现横向两列布局
- 常用于一列固定长度， 另一列宽度自适应的情况
- 主要应用技能：
relative - 父元素相对定位
absolute - 自适应宽度元素绝对定位
固定宽度列的高度>自适应宽度的列
- 已知一个设置了绝对定位的元素 b，位于其父元素 a 中，a 元素为静态定位，则 b 元素将以根元素为基准进行偏移，也就是 html 元素为基准进行偏移。
